import * as THREE from "three";

export default class MoveController extends THREE.Object3D {
    constructor() {
        super();
        this.playerX = 0;
        this.playerY = 0;
        this.detergent = null;
        this.fill = null;
        this.screenWidth = window.innerWidth;
        this._canMove = null;
    }
    start() {
        this._canMove = true;
        console.log("started", this._canMove)
        this.detergent.stopIdleAnimation();

    }
    setBottleView(obj) {
        this.detergent = obj;
    }
    setFillView(obj) {
        this.fill = obj;
    }

    onMove(x, y) {
        if (this._canMove) {
            this.getMousePosition(x, y, this.detergent);
            this.moveDetergent(this.detergent);
        }
    }

    onDown() {
        if (this._canMove)
            this.detergent.rotateDown();
    }

    onUp() {
        if (this._canMove)
            this.detergent.rotateUp();
    }

    getMousePosition(x, y, detergent) {
        const normalizedX = (x / this.screenWidth) * 400 - 200;
        this.playerX = normalizedX;
        this.playerY = y;
        this.moveDetergent(detergent);
    }

    moveDetergent(detergent) {
        const speed = -0.01;
        const maxDistance = 500;

        const clampPlayerX = Math.max(-maxDistance, Math.min(maxDistance, this.playerX));
        detergent.position.x = -clampPlayerX * speed;

        if (detergent.position.x > 0.13 && detergent.position.x < 0.3) {
            this.collision();
        } else this.fill.stopFill();
    }

    win() {
        console.log("win")
        this._canMove = false;
        this.fill.stopFill();

    }
    collision() {
        this.fill.show();
        this.fill.fill(() => {
            this.win();
        });
    }

}
